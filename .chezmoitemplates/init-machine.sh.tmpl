#!/bin/bash
# Init script for new machine setup
# This will run when Chezmoi initializes a new machine

set -e

echo "Setting up your new machine..."

# OS-specific setup
case {{ .chezmoi.os }} in
  "darwin")
    # Install Homebrew if not present
    if ! command -v brew >/dev/null 2>&1; then
      echo "Installing Homebrew..."
      /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    fi
    
    # Define essential packages
    ESSENTIAL_PKGS=(
      fish
      starship
      ripgrep
      fd
      fzf
      bat
      eza
      zoxide
      git-delta
      atuin
      zellij
      lazygit
      bitwarden-cli
      jq
    )
    
    echo "Installing essential packages..."
    brew install ${ESSENTIAL_PKGS[@]}
    
    # Install VS Code if requested
    if [[ "{{ .install_vscode }}" =~ ^[Yy]$ ]]; then
      echo "Installing VS Code..."
      brew install --cask visual-studio-code
    fi
    
    # Install Cursor if requested
    if [[ "{{ .install_cursor }}" =~ ^[Yy]$ ]]; then
      echo "Installing Cursor..."
      brew install --cask cursor
    fi
    
    {{ if eq .is_work_machine "y" }}
    # Work-specific setup
    WORK_PKGS=(
      docker
      docker-compose
      1password-cli
    )
    
    echo "Installing work packages..."
    brew install ${WORK_PKGS[@]}
    {{ end }}
    ;;
    
  "linux")
    # Select the right package manager
    if command -v apt >/dev/null 2>&1; then
      PKG_MANAGER="apt"
      PKG_INSTALL="sudo apt update && sudo apt install -y"
      
      # Install VS Code if requested
      if [[ "{{ .install_vscode }}" =~ ^[Yy]$ ]]; then
        echo "Installing VS Code..."
        wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
        sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
        sudo sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
        rm -f packages.microsoft.gpg
        sudo apt update
        sudo apt install -y code
      fi
      
    elif command -v dnf >/dev/null 2>&1; then
      PKG_MANAGER="dnf"
      PKG_INSTALL="sudo dnf install -y"
      
      # Install VS Code if requested
      if [[ "{{ .install_vscode }}" =~ ^[Yy]$ ]]; then
        echo "Installing VS Code..."
        sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
        sudo sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo'
        sudo dnf install -y code
      fi
      
    elif command -v pacman >/dev/null 2>&1; then
      PKG_MANAGER="pacman"
      PKG_INSTALL="sudo pacman -Sy"
      
      # Install VS Code if requested
      if [[ "{{ .install_vscode }}" =~ ^[Yy]$ ]]; then
        echo "Installing VS Code..."
        sudo pacman -Sy code
      fi
      
    else
      echo "Unsupported Linux distribution"
      exit 1
    fi
    
    # Install essential packages available in repositories
    ESSENTIAL_PKGS=(
      fish
      ripgrep
      fd-find
      fzf
      bat
      zoxide
      git
      jq
      npm
    )
    
    echo "Installing essential packages..."
    eval "${PKG_INSTALL} ${ESSENTIAL_PKGS[*]}"
    
    # Install packages that might need special handling
    echo "Installing Starship..."
    curl -sS https://starship.rs/install.sh | sh -s -- -y
    
    echo "Installing Atuin..."
    bash <(curl https://raw.githubusercontent.com/atuinsh/atuin/main/install.sh)
    
    echo "Installing Bitwarden CLI..."
    npm install -g @bitwarden/cli
    
    # Install Cursor if requested
    if [[ "{{ .install_cursor }}" =~ ^[Yy]$ ]]; then
      echo "Installing Cursor..."
      bash "$HOME/.local/share/chezmoi/.chezmoitemplates/install-cursor.sh"
    fi
    
    {{ if eq .is_work_machine "y" }}
    # Work-specific setup
    WORK_PKGS=(
      docker
      docker-compose
    )
    
    echo "Installing work packages..."
    eval "${PKG_INSTALL} ${WORK_PKGS[*]}"
    {{ end }}
    ;;
    
  *)
    echo "Unsupported operating system: {{ .chezmoi.os }}"
    ;;
esac

# Set fish as default shell if it's not already
FISH_PATH=$(which fish)
if [[ "$SHELL" != "$FISH_PATH" ]]; then
  echo "Setting fish as default shell..."
  if grep -q "$FISH_PATH" /etc/shells; then
    chsh -s "$FISH_PATH"
  else
    echo "$FISH_PATH" | sudo tee -a /etc/shells
    chsh -s "$FISH_PATH"
  fi
fi

# Make sure ~/.local/bin exists and is in PATH
mkdir -p "$HOME/.local/bin"

# Install VS Code extensions if VS Code is installed
if command -v code >/dev/null 2>&1; then
  if [[ -f "$HOME/.config/Code/User/extensions.json" ]]; then
    echo "Installing VS Code extensions..."
    bash "$HOME/.local/share/chezmoi/.chezmoitemplates/install-vscode-extensions.sh"
  fi
fi

echo "Machine setup complete!" 